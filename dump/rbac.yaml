#@ load("@ytt:data", "data")

kind: ServiceAccount
apiVersion: v1
metadata:
  name: vaultcr-ns-sa-stg

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vaultcr-ns-sa-stg
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "update", "patch"]
---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vaultcr-ns-sa-stg
roleRef:
  kind: Role
  name: vaultcr-ns-sa-stg
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: vaultcr-ns-sa-stg

---

# This binding allows the deployed Vault instance to authenticate clients
# through Kubernetes ServiceAccounts (if configured so).
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vaultcr-ns-sa-stg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vaultcr-ns-sa-stg
    namespace: #@ data.values.app_namespace
